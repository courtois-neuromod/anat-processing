process {
    withName: alignMtsatInputs {
        cpus = 1
        memory = 0.5.GB
        maxForks = 5
        container = 'qmrlab/antsfsl:latest'
    }
    withName: publishOutputs {
        cpus = 1
        memory = 1.GB
        container = 'qmrlab/minimal:v2.5.0b'
    }
    withName: publishOutputsFmap {
        cpus = 1
        memory = 1.GB
        container = 'qmrlab/minimal:v2.5.0b'
    }
    withName: extractBrain {
        cpus = 1
        memory = 1.GB
        container = 'qmrlab/antsfsl:latest'
    }
    withName: resampleB1 {
        cpus = 1
        memory = 0.5.GB
        container = 'qmrlab/antsfsl:latest'
    }
    withName: smoothB1WithMask {
        cpus = 1
        memory = 1.GB
        container = 'qmrlab/minimal:v2.5.0b'
    }
        withName: smoothB1WithoutMask {
        cpus = 1
        memory = 1.GB
        container = 'qmrlab/minimal:v2.5.0b'
    }
    withName: fitMp2rageUni {
        cpus = 1
        memory = 1.GB
        maxForks = 5
        container = 'qmrlab/minimal:v2.5.0b'
    }
    withName: fitMtratio {
        cpus = 1
        memory = 1.GB
        container = 'qmrlab/minimal:v2.5.0b'
    }
    withName: Align_Input_Volumes {
        cpus = 1
        memory = 1.GB
        container = 'qmrlab/antsfsl:latest'
    }
    withName: Extract_Brain {
        cpus = 1
        memory = 1.GB
        container = 'qmrlab/antsfsl:latest'
    }
    withName:B1_Align {
        cpus = 1
        memory = 1.GB
        container = 'qmrlab/antsfsl:latest'
    }
    withName:generateRegionMasks {
        cpus = 2
        memory = 3.GB
        maxForks = 2
        container = 'qmrlab/antsfsl:latest'
    }
    withName:B1_Smooth_Without_Mask {
        container = 'qmrlab/minimal:v2.5.0b'
    }
   withName:fitMtsatWithB1Mask {
        cpus = 1
        memory = 1.GB
        container = 'qmrlab/minimal:v2.5.0b'
    }
    withName:fitMtsatWithB1 {
        cpus = 1
        memory = 1.GB
        container = 'qmrlab/minimal:v2.5.0b'
    }
    withName:fitMtsatWithBet {
        cpus = 1
        memory = 1.GB
        container = 'qmrlab/minimal::v2.5.0b'
    }
    withName:fitMtsat {
        cpus = 1
        memory = 1.GB
        container = 'qmrlab/minimal::v2.5.0b'
    }
}

//** Suggested use: Enable Docker. **//   
//** See more at: https://github.com/qMRLab/qMRflow **//

docker {
    enabled = true
}


params {
    
        qmrlab_derivatives  = "$params.bids/derivatives/qMRLab"
        
    //** === (1) PLATFORM SETTINGS === **//     
      
        platform="octave"
    
        matlab_path = null

        octave_path = null
        
        qmrlab_path = null
        
        wrapper_version = "v1.0.0" 
        wrapper_repo = "https://github.com/qMRLab/qMRWrappers.git"

        matlab_path_exception = null
        qmrlab_path_exception = null

    //** === (2) PROCESS SPECIFIC SETTINGS === **// 
                 
    //** ANTs input alignment (to T1w) parameters **//
    //** These parameters are also used to map T1w-highres to MTS and MP2RAGE **//
        
        ants_dim=3
        ants_metric="MI"
        ants_metric_weight=1
        ants_metric_bins=32
        ants_metric_sampling="Regular"
        ants_metric_samplingprct=0.25
        ants_transform="Rigid[0.1]"
        ants_convergence="[1000x500x250x100,1e-6,10]"
        ants_shrink="8x4x2x1"
        ants_smoothing = "3x2x1x0vox"

    //** BET Brain extraction parameters **//    
       
        use_bet=false
        bet_recursive=true
        bet_threshold=0.45
    
    //** B1+ correction parameters **//  
        use_b1cor=true
        b1cor_factor=0.4  
        b1_filter_siemens = true
        b1_filter_type = "polynomial"
        b1_filter_dimension = "2D"
        b1_filter_order = 6
        b1_filter_size = "[3 3 3]"
}
